---
import Layout from '../../layouts/Layout.astro';
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// Check if user is authenticated and is an admin
const { data: { session } } = await supabase.auth.getSession();
const { data: adminData } = session ? await supabase
  .from('admins')
  .select('*')
  .eq('id', session.user.id)
  .single() : { data: null };

// If not authenticated or not admin, redirect to login
if (!session || !adminData) {
  return Astro.redirect('/admin/login');
}

// Fetch models
const { data: models } = await supabase
  .from('models')
  .select('*')
  .order('name');
---

<Layout title="Panel de Administración">
  <div class="min-h-screen pt-32 px-6 bg-gray-900">
    <div class="max-w-7xl mx-auto">
      <div class="flex justify-between items-center mb-8">
        <h1 class="text-2xl font-light text-white">Panel de Administración</h1>
        <a 
          href="/admin/models/new" 
          class="bg-[#9F8E6A] hover:bg-[#8A7A5C] text-white px-4 py-2 rounded transition-colors"
        >
          Nueva Modelo
        </a>
      </div>

      <!-- Models Table -->
      <div class="bg-black/50 rounded-lg overflow-hidden">
        <table class="w-full text-left">
          <thead class="bg-black/50 text-gray-300">
            <tr>
              <th class="px-6 py-4">Imagen</th>
              <th class="px-6 py-4">Nombre</th>
              <th class="px-6 py-4">Medidas</th>
              <th class="px-6 py-4">Ubicación</th>
              <th class="px-6 py-4">Acciones</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-800">
            {models?.map((model) => (
              <tr class="text-gray-300">
                <td class="px-6 py-4">
                  <img 
                    src={model.main_image} 
                    alt={model.name}
                    class="w-16 h-16 object-cover rounded"
                  />
                </td>
                <td class="px-6 py-4">{model.name}</td>
                <td class="px-6 py-4">
                  {model.bust}-{model.waist}-{model.hips}
                </td>
                <td class="px-6 py-4">{model.location || 'No especificada'}</td>
                <td class="px-6 py-4">
                  <div class="flex gap-2">
                    <a 
                      href={`/admin/models/${model.id}`}
                      class="text-blue-400 hover:text-blue-300"
                    >
                      Editar
                    </a>
                    <button
                      data-model-id={model.id}
                      class="text-red-400 hover:text-red-300 delete-model"
                    >
                      Eliminar
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</Layout>

<script>
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

  // Handle model deletion
  document.querySelectorAll('.delete-model').forEach(button => {
    button.addEventListener('click', async () => {
      const modelId = button.getAttribute('data-model-id');
      if (!modelId) return;

      if (confirm('¿Estás seguro de que deseas eliminar esta modelo?')) {
        const { error } = await supabase
          .from('models')
          .delete()
          .eq('id', modelId);

        if (error) {
          alert('Error al eliminar la modelo');
        } else {
          window.location.reload();
        }
      }
    });
  });
</script>