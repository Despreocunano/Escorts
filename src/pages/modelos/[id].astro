---
import Layout from '../../layouts/Layout.astro';
import { supabase, hasSupabaseCredentials } from '../../lib/supabase';

export async function getStaticPaths() {
  try {
    if (!hasSupabaseCredentials()) {
      return [
        {
          params: { id: 'placeholder' },
          props: { isPlaceholder: true }
        }
      ];
    }

    const { data: models, error } = await supabase
      .from('models')
      .select('id');

    if (error) throw error;

    return models.map(model => ({
      params: { id: model.id },
      props: { isPlaceholder: false }
    }));
  } catch (error) {
    console.error('Error fetching model paths:', error);
    return [];
  }
}

const { id } = Astro.params;
const { isPlaceholder } = Astro.props;

let model = null;
let error = null;

if (!isPlaceholder) {
  try {
    const { data, error: supabaseError } = await supabase
      .from('models')
      .select('*')
      .eq('id', id)
      .single();

    if (supabaseError) throw supabaseError;
    model = data;
  } catch (e) {
    error = e;
    console.error('Error fetching model:', e);
  }
}

if (!model && !error && !isPlaceholder) {
  return Astro.redirect('/404');
}
---

<Layout title={model ? `${model.name} - Agencia de Modelos` : 'Error'}>
  {isPlaceholder && (
    <div class="min-h-screen flex items-center justify-center px-6">
      <p class="text-gray-400">Esta página requiere configuración de Supabase.</p>
    </div>
  )}

  {error && (
    <div class="min-h-screen flex items-center justify-center px-6">
      <p class="text-gray-400">Error al cargar los detalles del modelo.</p>
    </div>
  )}

  {model && (
    <div class="min-h-screen bg-black text-white pt-24">
      <div class="max-w-[1200px] mx-auto px-6">
        <div class="flex flex-col md:flex-row gap-8 items-start">
          <!-- Profile Image Section -->
          <div class="w-full md:w-[300px] flex-shrink-0">
            <div class="rounded-full overflow-hidden aspect-square mb-6">
              <img
                src={model.main_image}
                alt={model.name}
                class="w-full h-full object-cover"
                fetchpriority="high"
              />
            </div>
            <div class="text-center">
              <h1 class="text-2xl font-light mb-2">{model.name}</h1>
              <div class="flex justify-center gap-2 text-sm text-gray-400">
                <span>{model.height}cm</span>
                <span>•</span>
                <span>{model.bust}-{model.waist}-{model.hips}</span>
              </div>
            </div>
          </div>

          <!-- Details Section -->
          <div class="flex-grow">
            <!-- Services -->
            <div class="mb-12">
              <h2 class="text-lg font-light mb-4 uppercase tracking-wider">Mis Servicios</h2>
              <div class="flex flex-wrap gap-2">
                <span class="px-3 py-1 bg-[#2A2A2A] rounded text-sm">Cenas</span>
                <span class="px-3 py-1 bg-[#2A2A2A] rounded text-sm">Eventos</span>
                <span class="px-3 py-1 bg-[#2A2A2A] rounded text-sm">Viajes</span>
              </div>
            </div>

            <!-- Attributes -->
            <div class="mb-12">
              <h2 class="text-lg font-light mb-4 uppercase tracking-wider">Mis Atributos</h2>
              <div class="grid grid-cols-2 md:grid-cols-3 gap-4 text-sm">
                <div class="space-y-2">
                  <p class="text-gray-400">Altura: <span class="text-white">{model.height}cm</span></p>
                  <p class="text-gray-400">Busto: <span class="text-white">{model.bust}cm</span></p>
                  <p class="text-gray-400">Cintura: <span class="text-white">{model.waist}cm</span></p>
                </div>
                <div class="space-y-2">
                  <p class="text-gray-400">Cadera: <span class="text-white">{model.hips}cm</span></p>
                  <p class="text-gray-400">Calzado: <span class="text-white">{model.shoe_size}</span></p>
                  <p class="text-gray-400">Ojos: <span class="text-white">{model.eyes}</span></p>
                </div>
                <div class="space-y-2">
                  <p class="text-gray-400">Cabello: <span class="text-white">{model.hair}</span></p>
                </div>
              </div>
            </div>

            <!-- Gallery -->
            <div>
              <h2 class="text-lg font-light mb-4 uppercase tracking-wider">Galería</h2>
              <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                {model.gallery.map((image: string, index: number) => (
                  <div class="aspect-[3/4] bg-[#2A2A2A] overflow-hidden">
                    <img
                      src={image}
                      alt={`${model.name} gallery`}
                      class="w-full h-full object-cover hover:scale-110 transition-transform duration-500"
                      loading={index < 6 ? "eager" : "lazy"}
                      decoding="async"
                    />
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )}
</Layout>