---
import { supabase, hasSupabaseCredentials } from '../lib/supabase';

interface Model {
  id: string;
  name: string;
  height: number;
  bust: number;
  waist: number;
  hips: number;
  main_image: string;
  videos?: string[];
  rate?: number;
  area?: string;
}

let models: Model[] = [];
let error: string | null = null;

try {
  if (!hasSupabaseCredentials()) {
    error = 'credentials_missing';
  } else {
    const { data, error: supabaseError } = await supabase
      .from('models')
      .select('*')
      .order('name');
    
    if (supabaseError) throw supabaseError;
    models = data || [];
  }
} catch (e) {
  console.error('Error fetching models:', e);
  error = 'fetch_error';
}
---

{error === 'credentials_missing' && (
  <div class="text-center max-w-2xl mx-auto">
    <h2 class="text-white text-xl font-light mb-4 tracking-wider">CONFIGURACIÓN REQUERIDA</h2>
    <p class="text-gray-400 text-sm">
      Para ver los modelos, necesitas configurar la conexión con Supabase.
    </p>
  </div>
)}

{error === 'fetch_error' && (
  <div class="text-center py-8">
    <p class="text-gray-400">Error al cargar los modelos. Por favor, intenta nuevamente más tarde.</p>
  </div>
)}

{!error && (
  <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
    {models.map((model) => (
      <div class="flex flex-col">
        <a 
          href={`/modelos/${model.id}`}
          class="relative aspect-[3/4] bg-gray-900 rounded-lg mb-4 overflow-hidden"
        >
          <img
            src={model.main_image}
            alt={model.name}
            class="h-full w-full object-cover"
          />
          {model.videos && model.videos.length > 0 && (
            <div class="absolute top-4 right-4 bg-black/50 p-2 rounded-full z-10">
              <svg 
                xmlns="http://www.w3.org/2000/svg" 
                viewBox="0 0 24 24" 
                fill="currentColor" 
                class="w-5 h-5 text-white"
              >
                <path 
                  fill-rule="evenodd" 
                  d="M4.5 5.653c0-1.426 1.529-2.33 2.779-1.643l11.54 6.348c1.295.712 1.295 2.573 0 3.285L7.28 19.991c-1.25.687-2.779-.217-2.779-1.643V5.653z" 
                  clip-rule="evenodd" 
                />
              </svg>
            </div>
          )}
        </a>
        <div class="text-center">
          <h3 class="text-white text-lg font-light tracking-wider mb-2">{model.name}</h3>
          <div class="grid grid-cols-2 gap-2 text-sm">
            <div class="bg-[#1A1A1A] py-2 px-3 rounded">
              <p class="text-gray-400 text-xs mb-1">Tarifa</p>
              <p class="text-white font-light">
                {model.rate ? `$${model.rate.toLocaleString()} CLP` : 'Consultar'}
              </p>
            </div>
            <div class="bg-[#1A1A1A] py-2 px-3 rounded">
              <p class="text-gray-400 text-xs mb-1">Zona</p>
              <p class="text-white font-light">
                {model.area || 'No especificada'}
              </p>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
)}